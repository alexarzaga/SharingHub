{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "%matplotlib inline\n",
    "import codecs\n",
    "import re"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "wellcome = pd.read_csv('Data/WELLCOME_APCspend2013.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Data Cleaning"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "wellcome = wellcome.rename(index=str, columns = {\"COST (Â£) charged to Wellcome (inc VAT when charged)\" : 'COST'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "wellcome = wellcome.drop(['PMID/PMCID', 'Journal title','Article title'], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "paren = wellcome['Publisher'].str.replace('\\((.*?)\\)',' ').astype('str')\n",
    "wellcome['Publisher'] = paren"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "symbols = wellcome['Publisher'].str.replace('[\\/,\\-,\\.,\\,,\\(,\\)]', ' ').astype('str')\n",
    "wellcome['Publisher'] = symbols"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "space = wellcome['Publisher'].str.replace('  ', ' ').astype('str')\n",
    "wellcome['Publisher'] = space"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "capital = wellcome['Publisher'].str.upper().astype('str')\n",
    "wellcome['Publisher'] = capital"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "symbols2 = wellcome['Publisher'].str.replace(' AND ', ' & ').astype('str')\n",
    "wellcome['Publisher'] = symbols2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "the = wellcome['Publisher'].str.replace('THE','').astype('str')\n",
    "wellcome['Publisher'] = the"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "general = wellcome['Publisher'].str.replace('GENERMAL','GENERAL').astype('str')\n",
    "wellcome['Publisher'] = general"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "society = wellcome['Publisher'].str.replace('SOC ', 'SOCIETY').astype('str')\n",
    "wellcome['Publisher'] = society"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "society2 = wellcome['Publisher'].str.replace('SOCETY', 'SOCIETY').astype('str')\n",
    "wellcome['Publisher'] = society2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "biology = wellcome['Publisher'].str.replace('BIOLGY', 'BIOLOGY').astype('str')\n",
    "wellcome['Publisher'] = biology"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "for1 = wellcome['Publisher'].str.replace('FOR ', ' FOR ').astype('str')\n",
    "wellcome['Publisher'] = for1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "for2 = wellcome['Publisher'].str.replace(' FOR ', ' OF ').astype('str')\n",
    "wellcome['Publisher'] = for2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "hema = wellcome['Publisher'].str.replace('H.*MATOLOGY', 'HEMATOLOGY').astype('str')\n",
    "wellcome['Publisher'] = hema"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "ACS2 = wellcome['Publisher'].str.replace('AMERICAN CHEMICAL SOCIETY','ACS').astype('str')\n",
    "wellcome['Publisher'] = ACS2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "ACS3 = wellcome['Publisher'].str.replace('.*ACS.*','ACS').astype('str')\n",
    "wellcome['Publisher'] = ACS3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "asbmb = wellcome['Publisher'].str.replace('.*AMERICAN SOCIETY OF BIOCHEMISTRY & MOLECULAR BIOLOGY.*','ASBMB').astype('str')\n",
    "wellcome['Publisher'] = asbmb"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "asbmb2 = wellcome['Publisher'].str.replace('ASBMC', 'ASBMB').astype('str')\n",
    "wellcome['Publisher'] = asbmb2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "asbmb3 = wellcome['Publisher'].str.replace('AMBSB', 'ASBMB').astype('str')\n",
    "wellcome['Publisher'] = asbmb3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "asbmb4 = wellcome['Publisher'].str.replace('.*AMERICAN SOCIETY OF BIOCHEMISTRY & MOLECULAR BIOLOGY.*','ASBMB').astype('str')\n",
    "wellcome['Publisher'] = asbmb4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "asbmb5 = wellcome['Publisher'].str.replace('.*ASBMB.*', 'ASBMB').astype('str')\n",
    "wellcome['Publisher'] = asbmb5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "asm = wellcome['Publisher'].str.replace('AMERICAN SOCIETY .* MICROBIOLOGY', 'ASM').astype('str')\n",
    "wellcome['Publisher'] = asm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "bmj = wellcome['Publisher'].str.replace('.*BMJ.*', 'BMJ').astype('str')\n",
    "wellcome['Publisher'] = bmj"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "endo = wellcome['Publisher'].str.replace('ENDROCRINE SOCIETY', 'ENDOCRINE SOCIETY').astype('str')\n",
    "wellcome['Publisher'] = endo"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "wiley = wellcome['Publisher'].str.replace('.*WILEY.*', 'WILEY BLACKWELL').astype('str')\n",
    "wellcome['Publisher'] = wiley"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "wiley2 = wellcome['Publisher'].str.replace('WLIEY BLACKWELL', 'WILEY BLACKWELL').astype('str')\n",
    "wellcome['Publisher'] = wiley2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "wolters = wellcome['Publisher'].str.replace('.*WOLT.*', 'WOLTERS KLUWER').astype('str')\n",
    "wellcome['Publisher'] = wolters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "bentham = wellcome['Publisher'].str.replace('BENTHAN', 'BENTHAM').astype('str')\n",
    "wellcome['Publisher'] = bentham"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "biomed = wellcome['Publisher'].str.replace('.*BIOMED.*','BIOMED CENTRAL LTD').astype('str')\n",
    "wellcome['Publisher'] = biomed"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "springer = wellcome['Publisher'].str.replace('SPRINGER.*','SPRINGER VERLAG').astype('str')\n",
    "wellcome['Publisher'] = springer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "tf = wellcome['Publisher'].str.replace('T.*\\&.*F.*', 'TAYLOR & FRANCIS').astype('str')\n",
    "wellcome['Publisher'] = tf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "sage = wellcome['Publisher'].str.replace('.*SAGE.*', 'SAGE PUBLICATIONS').astype('str')\n",
    "wellcome['Publisher'] = sage"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "cadmus = wellcome['Publisher'].str.replace('.*CADMUS.*', 'CADMUS JOURNAL SERVICES').astype('str')\n",
    "wellcome['Publisher'] = cadmus"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "pyschiatric = wellcome['Publisher'].str.replace('.*PSYCHIATRIC.*', 'AMERICAN PSYCHIATRIC ASSOCIATION').astype('str')\n",
    "wellcome['Publisher'] = pyschiatric"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "neuro = wellcome['Publisher'].str.replace('NEURO.*SCIENCES', 'NEUROSCIENCE').astype('str')\n",
    "wellcome['Publisher'] = neuro"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "royal = wellcome[\"Publisher\"].str.replace('ROYAL SOCIETY.*', 'RSC PUBLISHING').astype('str')\n",
    "wellcome['Publisher'] = royal"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "royal2 = wellcome[\"Publisher\"].str.replace('.*RSC.*', 'RSC PUBLISHING').astype('str')\n",
    "wellcome['Publisher'] = royal2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "pubmed = wellcome[\"Publisher\"].str.replace('.*PUBMED.*', 'PUBMED CENTRAL').astype('str')\n",
    "wellcome['Publisher'] = pubmed"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "endo_soc = wellcome['Publisher'].str.replace('.*SOCIETY OF ENDOCRINOLOGY','SOCIETY OF ENDOCRINOLOGY').astype('str')\n",
    "wellcome['Publisher'] = endo_soc"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [],
   "source": [
    "portland = wellcome['Publisher'].str.replace('.*PORTLAND PRESS.*','PORTLAND PRESS LTD').astype('str')\n",
    "wellcome['Publisher'] = portland"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "pnas = wellcome['Publisher'].str.replace('.*PNAS.*','PNAS').astype('str')\n",
    "wellcome['Publisher'] = pnas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [],
   "source": [
    "plos = wellcome['Publisher'].str.replace('.*PUBLIC LIBRARY OF SCIENCE.*','PLOS').astype('str')\n",
    "wellcome['Publisher'] = plos"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [],
   "source": [
    "oxford = wellcome['Publisher'].str.replace('OXFORD.*','OXFORD UNIVERSITY PRESS')\n",
    "wellcome['Publisher'] = oxford"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [],
   "source": [
    "elsevier = wellcome['Publisher'].str.replace('ELSEVIER.*','ELSEVIER')\n",
    "wellcome['Publisher'] = elsevier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [],
   "source": [
    "strip = wellcome['Publisher'].str.strip()\n",
    "wellcome['Publisher'] = strip"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [],
   "source": [
    "cost = wellcome['COST'].str.replace('Â£',' ').astype('str')\n",
    "wellcome['COST'] = cost"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [],
   "source": [
    "cost2 = wellcome['COST'].str.replace('$',' ').astype('str')\n",
    "wellcome['COST'] = cost2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [],
   "source": [
    "cost3 = wellcome['COST'].str.replace(' ','').astype('float')\n",
    "wellcome['COST'] = cost3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [],
   "source": [
    "wellcome = wellcome.drop(wellcome[(wellcome.COST >= 9000)].index)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ELSEVIER                   396\n",
      "PLOS                       291\n",
      "WILEY BLACKWELL            265\n",
      "OXFORD UNIVERSITY PRESS    109\n",
      "SPRINGER VERLAG             94\n",
      "Name: Publisher, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "p = wellcome['Publisher'].value_counts()\n",
    "print(p.nlargest(5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [],
   "source": [
    "wellcome = wellcome.set_index('Publisher')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [],
   "source": [
    "top = wellcome.loc[['ELSEVIER', 'PLOS', 'WILEY BLACKWELL', 'OXFORD UNIVERSITY PRESS', 'SPRINGER VERLAG']]\n",
    "elsevier = wellcome.loc['ELSEVIER']\n",
    "plos = wellcome.loc['PLOS']\n",
    "wiley = wellcome.loc['WILEY BLACKWELL']\n",
    "oxford = wellcome.loc['OXFORD UNIVERSITY PRESS']\n",
    "springer = wellcome.loc[\"SPRINGER VERLAG\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [],
   "source": [
    "top = top.reset_index()\n",
    "elsevier = elsevier.reset_index()\n",
    "plos = plos.reset_index()\n",
    "wiley = wiley.reset_index()\n",
    "springer = springer.reset_index()\n",
    "oxford = oxford.reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [],
   "source": [
    "elsevier_mean = np.round(np.mean(elsevier['COST']), decimals=2)\n",
    "elsevier_median = np.round(np.median(elsevier['COST']), decimals=2)\n",
    "elsevier_std = np.round(np.std(elsevier['COST']), decimals=2)\n",
    "\n",
    "plos_mean = np.round(np.mean(plos['COST']), decimals=2)\n",
    "plos_median = np.round(np.median(plos['COST']), decimals=2)\n",
    "plos_std = np.round(np.std(plos['COST']), decimals=2)\n",
    "\n",
    "wiley_mean = np.round(np.mean(wiley['COST']), decimals=2)\n",
    "wiley_median = np.round(np.median(wiley['COST']), decimals=2)\n",
    "wiley_std = np.round(np.std(wiley['COST']), decimals=2)\n",
    "\n",
    "oxford_mean = np.round(np.mean(oxford['COST']), decimals=2)\n",
    "oxford_median = np.round(np.median(oxford['COST']), decimals=2)\n",
    "oxford_std = np.round(np.std(oxford['COST']), decimals=2)\n",
    "\n",
    "springer_mean = np.round(np.mean(springer['COST']), decimals=2)\n",
    "springer_median = np.round(np.median(springer['COST']), decimals=2)\n",
    "springer_std = np.round(np.std(springer['COST']), decimals=2)\n",
    "\n",
    "total_count = 396 + 291 + 265 + 109 + 94\n",
    "total_mean = np.round(np.mean(top['COST']), decimals=2)\n",
    "total_median = np.round(np.median(top['COST']), decimals=2)\n",
    "total_std = np.round(np.std(top['COST']), decimals=2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [],
   "source": [
    "top_5 = pd.DataFrame(np.array([[396, elsevier_mean, elsevier_median, elsevier_std], \n",
    "                               [291, plos_mean, plos_median, plos_std], \n",
    "                               [265, wiley_mean, wiley_median, wiley_std],\n",
    "                               [109, oxford_mean, oxford_median, oxford_std],\n",
    "                               [94, springer_mean , springer_median, springer_std], \n",
    "                               [total_count, total_mean, total_median, total_std]]),\n",
    "                              index=['Elsevier', 'Public Library of Science', 'Wiley-Blackwell','Oxford University Press','Springer-Verlag', 'TOTAL'],\n",
    "                  columns=['Number of Articles', 'Mean Cost', 'Median Cost', 'Standard Deviation'])\n",
    "                     "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Number of Articles</th>\n",
       "      <th>Mean Cost</th>\n",
       "      <th>Median Cost</th>\n",
       "      <th>Standard Deviation</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Elsevier</th>\n",
       "      <td>396.0</td>\n",
       "      <td>2437.59</td>\n",
       "      <td>2344.42</td>\n",
       "      <td>794.58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Public Library of Science</th>\n",
       "      <td>291.0</td>\n",
       "      <td>1134.48</td>\n",
       "      <td>1019.76</td>\n",
       "      <td>405.54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Wiley-Blackwell</th>\n",
       "      <td>265.0</td>\n",
       "      <td>2010.79</td>\n",
       "      <td>2006.64</td>\n",
       "      <td>371.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Oxford University Press</th>\n",
       "      <td>109.0</td>\n",
       "      <td>1803.59</td>\n",
       "      <td>2040.00</td>\n",
       "      <td>499.38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Springer-Verlag</th>\n",
       "      <td>94.0</td>\n",
       "      <td>2023.87</td>\n",
       "      <td>1968.11</td>\n",
       "      <td>270.12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>TOTAL</th>\n",
       "      <td>1155.0</td>\n",
       "      <td>1917.85</td>\n",
       "      <td>1969.02</td>\n",
       "      <td>755.30</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                           Number of Articles  Mean Cost  Median Cost  \\\n",
       "Elsevier                                396.0    2437.59      2344.42   \n",
       "Public Library of Science               291.0    1134.48      1019.76   \n",
       "Wiley-Blackwell                         265.0    2010.79      2006.64   \n",
       "Oxford University Press                 109.0    1803.59      2040.00   \n",
       "Springer-Verlag                          94.0    2023.87      1968.11   \n",
       "TOTAL                                  1155.0    1917.85      1969.02   \n",
       "\n",
       "                           Standard Deviation  \n",
       "Elsevier                               794.58  \n",
       "Public Library of Science              405.54  \n",
       "Wiley-Blackwell                        371.97  \n",
       "Oxford University Press                499.38  \n",
       "Springer-Verlag                        270.12  \n",
       "TOTAL                                  755.30  "
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "top_5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
